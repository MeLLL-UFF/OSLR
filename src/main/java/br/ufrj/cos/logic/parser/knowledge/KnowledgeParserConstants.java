/*
 * Probabilist Logic Learner is a system to learn probabilistic logic
 * programs from data and use its learned programs to make inference
 * and answer queries.
 *
 * Copyright (C) 2017 Victor Guimar√£es
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* Generated By:JavaCC: Do not edit this line. KnowledgeParserConstants.java */


package br.ufrj.cos.logic.parser.knowledge;

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface KnowledgeParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int DECIMAL = 6;
    /**
     * RegularExpression Id.
     */
    int NEGATION = 7;
    /**
     * RegularExpression Id.
     */
    int VARIABLE = 8;
    /**
     * RegularExpression Id.
     */
    int CONSTANT = 9;
    /**
     * RegularExpression Id.
     */
    int OPEN_PREDICATE_ARGUMENT = 10;
    /**
     * RegularExpression Id.
     */
    int CLOSE_PREDICATE_ARGUMENT = 11;
    /**
     * RegularExpression Id.
     */
    int LIST_SEPARATOR = 12;
    /**
     * RegularExpression Id.
     */
    int WEIGHT_SEPARATOR = 13;
    /**
     * RegularExpression Id.
     */
    int OPEN_FEATURES = 14;
    /**
     * RegularExpression Id.
     */
    int CLOSE_FEATURES = 15;
    /**
     * RegularExpression Id.
     */
    int IMPLICATION_SIGN = 16;
    /**
     * RegularExpression Id.
     */
    int END_OF_LINE_CHARACTER = 17;
    /**
     * RegularExpression Id.
     */
    int QUOTED = 18;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\r\"",
            "\"\\n\"",
            "<token of kind 5>",
            "<DECIMAL>",
            "\"not\"",
            "<VARIABLE>",
            "<CONSTANT>",
            "\"(\"",
            "\")\"",
            "\",\"",
            "\"::\"",
            "\"{\"",
            "\"}\"",
            "\":-\"",
            "\".\"",
            "<QUOTED>",
    };

}
